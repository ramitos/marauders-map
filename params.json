{"body":"# marauders map\r\n\r\n## usage\r\n\r\n###### random process\r\n\r\n```js\r\nvar reveal = require('marauders-map').reveal,\r\n    http = require('http'),\r\n    annport = 4545\r\n\r\nvar address = http.createServer(function (req, res) {\r\n  res.end('hello from web')\r\n}).listen().address()\r\n\r\nreveal(annport, {\r\n  name: 'web', //name of the service\r\n  domain: 'lvh.me', //only accepts requests for the domain 'lvh.me'\r\n  subdomain: 'www', //only accepts requests for the subdomain 'www'\r\n  port: address.port,\r\n  routes: {\r\n    '/:method/:number': [], //accepts all methods for this route\r\n    '/:method': ['put'] //only accepts PUT methods for this route\r\n  }\r\n})\r\n```\r\n\r\n###### main process\r\n\r\n```js\r\nvar seek = require('marauders-map').map(4545).seek,\r\n    proxy = require('http-proxy'),\r\n    request = require('request')\r\n\r\nproxy.createServer(function (req, res, proxy) {\r\n  var node = seek(req)\r\n\r\n  proxy.proxyRequest(req, res, {\r\n    host: 'localhost',\r\n    port: node.port\r\n  })\r\n}).listen(1337)\r\n\r\nrequest('http://www.lvh.me:1337/get/5', function (e, res, body) {\r\n  assert(body === 'hello from web')\r\n})\r\n```\r\n\r\n*The main process needs to be running before the random process reveals itself*\r\n\r\n*[lvh.me](http://lvh.me) is a domain that points to your local virtual host. nslookup for [lvh.me](http://lvh.me) shows the address as 127.0.0.1* ([http://pivotallabs.com](http://pivotallabs.com/users/apeng/blog/articles/1891-standup-10-14-11-lvh-me))\r\n\r\n*[node-proxy](https://github.com/nodejitsu/node-http-proxy) is a full-featured http proxy for node.js*\r\n\r\n## install\r\n```bash\r\nnpm install marauders-map\r\n```\r\n\r\n## test\r\n[![Build Status](https://secure.travis-ci.org/ramitos/marauders-map.png)](http://travis-ci.org/ramitos/marauders-map)\r\n```bash\r\nnpm test\r\n```\r\n\r\n## api\r\n\r\n### map(port)\r\nThis will start a tcp server that will listen to `reveal` announcements\r\n\r\n```js\r\nvar map = require('marauders-map').map(4546)\r\n```\r\n\r\nReturns a map instance that contains the `seek` function\r\n\r\n### reveal(port, node)\r\n`port`: the port to announce the node. It needs to be the same port used in the map function\r\n\r\nNode parameters:\r\n * `name` **required**\r\n * `port` **required**\r\n * `domain` *optional*\r\n * `subdomain` *optional*\r\n * `routes` *optional*\r\n\r\n### seek(http request)\r\n\r\nReturn a `node` if finds one\r\n\r\n## interoperability\r\n\r\n### [turnout](https://github.com/ramitos/turnout)\r\n\r\nOnly `turnout >= 0.0.5`\r\n\r\n```js\r\nvar reveal = require('marauders-map').reveal,\r\n    router = require('turnout')(),\r\n    require('http'),\r\n    annport = 4545\r\n\r\nvar address = http.createServer(function (req, res) {\r\n  router(req, res, function () {\r\n      res.statusCode = 404\r\n      res.end()\r\n    })\r\n}).listen().address()\r\n\r\nrouter.post('/todo/:id', function (req, res, params, query) {})\r\n\r\nrouter.put('/todo/:id/:state', function (req, res, params, query) {})\r\n\r\nreveal(port, {\r\n  name: 'todo',\r\n  port: address.port,\r\n  routes: router.routes()\r\n})\r\n```\r\n\r\nEven better, with [blage](https://github.com/ramitos/blage)\r\n\r\n```js\r\nvar reveal = require('marauders-map').reveal,\r\n    router = require('turnout')(),\r\n    blage = require('blage'),\r\n    require('http'),\r\n    annport = 4545\r\n\r\nvar address = http.createServer(blage(router)).listen().address()\r\n\r\nrouter.post('/todo/:id', function (req, res, params, query) {})\r\nrouter.put('/todo/:id/:state', function (req, res, params, query) {})\r\n\r\nreveal(port, {\r\n  name: 'todo',\r\n  port: address.port,\r\n  routes: router.routes()\r\n})\r\n```\r\n\r\n## examples\r\n\r\n```json\r\n[\r\n  {\r\n    \"name\": \"a\",\r\n    \"subdomain\": \"zmeyyjxusi\",\r\n    \"port\": 8147\r\n  },\r\n  {\r\n    \"name\": \"c\",\r\n    \"subdomain\": \"zmeyyjxusi\",\r\n    \"port\": 6078,\r\n    \"routes\": {\r\n      \"/:method/:number\": [],\r\n      \"/:method\": [\"put\"]\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"d\",\r\n    \"port\": 5237,\r\n    \"routes\": {\r\n      \"/:method/:number\": [\"get\", \"post\", \"delete\"],\r\n      \"/:method\": [\"put\"]\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"e\",\r\n    \"port\": 3617,\r\n    \"routes\": {\r\n      \"/\": []\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"f\",\r\n    \"port\": 9508\r\n  },\r\n  {\r\n    \"name\": \"g\",\r\n    \"domain\": \"llvm.me\",\r\n    \"subdomain\": \"zmeyyjxusi\",\r\n    \"port\": 81471\r\n  },\r\n  {\r\n    \"name\": \"h\",\r\n    \"domain\": \"llvm.me\",\r\n    \"subdomain\": \"zmeyyjxusi\",\r\n    \"port\": 80471,\r\n    \"routes\": {\r\n      \"/:method/:number\": [\"get\", \"post\", \"delete\"],\r\n      \"/:method\": [\"put\"]\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"l\",\r\n    \"domain\": \"llvm.me\",\r\n    \"port\": 95081\r\n  }\r\n]\r\n```\r\n\r\n## license\r\nMIT","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Marauders-map","tagline":"port service announcer and finder","google":""}